name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Check for syntax errors and undefined names with ruff
        run: |
          ruff --output-format=github --select=E9,F63,F7,F82 --target-version=py39 sympleints
      - name: Basic linting ruff
        run: |
          ruff --output-format=github --target-version=py39 sympleints
        continue-on-error: true
      - name: Install sympleints
        run: |
          python -m pip install .[test]
      - name: Test with pytest
        run: >
          pytest ./tests
          -v
          --junitxml=junit/test-results-${{ matrix.python-version }}.xml
          --cov=sympleints
          --cov-report=xml:coverage-${{ matrix.python-version }}.xml
          --cov-report=html:coverage-${{ matrix.python-version }}.html
      - name: Keep pytest results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: |
            junit/test-results-${{ matrix.python-version }}.xml
            coverage-${{ matrix.python-version }}.xml
            coverage-${{ matrix.python-version }}.html
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
